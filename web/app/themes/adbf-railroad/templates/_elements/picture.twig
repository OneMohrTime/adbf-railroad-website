{# -- Component Variables -- #}

{% set this = {
    src: params.src ?? null,
    alt: params.alt ?? params.src.altText ?? params.src.title ?? 'web image',
    classes: params.classes ?? null,
    optimization: (params.optimized is defined ? params.optimized : true),
    ratio: params.ratio ?? null,
    background: params.background ?? null,
    lazy: (params.lazy is defined ? params.lazy : true),
    attr: params.attr ?? null
} %}

{# -- Component Template -- #}

{% if this.src is not empty %}
    {% spaceless %}

    {# Frame can be set to relative/absolute image ratio-ing #}
    <picture class="c-media
        {# If this is meant to be a background image #}
        {% if this.background %}-is-background{% endif %}
        {# Custom ratio #}
        {% if this.ratio %} u-ratio u-{{ this.ratio }}{% endif %}"
        {# Custom data-attributes #}
        {% if this.attr %}{{ this.attr }}{% endif %}
    >

        {# If there is WebP support, use it first #}
        {% for name, info in this.src.sizes|reverse %}
            <source type="image/webp" sizes="{{ info.width }}w" srcset="{{ this.src.src(name)|towebp }}"
                {# Add attribute to lazyloaded images #}
                {% if this.lazy %}loading="lazy"{% endif %}/>
        {% endfor %}

        {# img tag for browsers that do not support picture element #}
        <img src="{{ this.src.src('thumbnail') }}"

            {# Alt text should never be empty, or contain tags, or be too long #}
            alt="{{ this.alt|striptags|slice(0, 120) }}"

            {# Semantic HTML width & height values #}
            width="{{ this.src.sizes['thumbnail'].width }}"
            height="{{ this.src.sizes['thumbnail'].height }}"

            {# Default class #}
            class="c-media__image

            {# If this is meant to be a background image #}
            {% if this.background %}-background{% endif %}

            {# Additional custom classes #}
            {% if this.classes %}{{ this.classes }}{% endif %}"

            {# Lazyloaded by default #}
            {% if this.lazy %}loading="lazy"{% endif %}

            {# Generate srcset #}
            srcset="{% for name, info in this.src.sizes %}
                {{ this.src.src(name) }} {{ info.width }}w,
            {% endfor %}"
        />

    </picture>

    {% endspaceless %}
{% endif %}
